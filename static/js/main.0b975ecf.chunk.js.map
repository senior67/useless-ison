{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","weight","style","marginBottom","fontSize","color","title","separator","header","mode","size","onClick","bridge","send","level","href","osName","platform","Persik","props","left","data-to","IOS","className","src","persik","alt","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,oC,wgBCoD5BC,EAxCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,EAAOC,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,sGAA6C,6BAC7C,gCAAQ,kBAAC,IAAD,CAAMG,OAAO,WAAWC,MAAO,CAAEC,aAAc,GAAIC,SAAU,GAAIC,MAAO,UAAxE,gBAA4F,kBAAC,IAAD,CAAMJ,OAAO,WAAWC,MAAO,CAAEC,aAAc,GAAIC,SAAU,GAAIC,MAAO,UAAxE,2IACpG,kBAAC,IAAD,CAAOC,MAAM,uHACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,UAAU,OAAOC,OAAQ,kBAAC,IAAD,CAAQC,KAAK,aAAb,wHAC/B,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMC,KAAK,IAAID,KAAK,UACnB,6BAAM,gCAAQ,kBAAC,IAAD,CAAMR,OAAO,WAAb,g1BAAgN,6BAAM,6BAAM,kBAAC,IAAD,CAAMA,OAAO,UAAb,2kCAA+O,6BAC5d,kBAAC,IAAD,CAAQQ,KAAK,WAAWE,QAAS,kBAAMC,IAAOC,KAAK,0BAA2B,CAAC,QAAW,2wBAA+K,YAAe,gCAAxR,iJAGU,+BAEE,6BACX,kBAAC,IAAD,CAAQH,KAAK,KAAKI,MAAM,IAAIH,QAAS,kBAAMC,IAAOC,KAAK,oBAAqB,CAAC,SAAY,cAAzF,uOAGD,6BAAM,6BACN,gCAAQ,kBAAC,IAAD,CAAME,KAAK,gCAAX,wL,4GCpBNC,G,OAASC,eAoBAC,EAlBA,SAAAC,GAAK,OACnB,kBAAC,IAAD,CAAOrB,GAAIqB,EAAMrB,IAChB,kBAAC,IAAD,CACCsB,KAAM,kBAAC,IAAD,CAAmBT,QAASQ,EAAMpB,GAAIsB,UAAQ,QAClDL,IAAWM,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAF3C,UAOA,yBAAKC,UAAU,SAASC,IAAKC,IAAQC,IAAI,qBCmB5BC,EAjCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,OAEcF,mBAAS,MAFvB,mBAEV5B,EAFU,KAEG+B,EAFH,OAGWH,mBAAS,kBAAC,IAAD,CAAelB,KAAK,WAHxC,mBAGVsB,EAHU,KAGFC,EAHE,KAKjBC,qBAAU,WAAM,4CAQf,4BAAAC,EAAA,sEACoBvB,IAAOC,KAAK,uBADhC,OACOuB,EADP,OAECL,EAAQK,GACRH,EAAU,MAHX,4CARe,sBACfrB,IAAOyB,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACpC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OALzB,mCAafQ,KACE,IAEH,IAAMlD,EAAK,SAAAmD,GACVpB,EAAeoB,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAMxB,YAAaA,EAAaG,OAAQA,GACvC,kBAAC,EAAD,CAAMlC,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC7B3Ba,IAAOC,KAAK,gBAEZyC,IAASC,OAAO,kBAAC,EAAD,MAASb,SAASc,eAAe,W","file":"static/js/main.0b975ecf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { Panel, PanelHeader, Button, Group, Div, Card, CardGrid, Header, Text, Link } from '@vkontakte/vkui';\n/*import Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n// import Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n// import Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n*/\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Включен ли девайс?</PanelHeader><br />\n\t\t<center><Text weight=\"semibold\" style={{ marginBottom: 16, fontSize: 50, color: 'green' }}>Да</Text><Text weight=\"semibold\" style={{ marginBottom: 16, fontSize: 20, color: 'green' }}>ваше устройство включено</Text></center>\n\t\t<Group title=\"#СамыйГлупыйЧеллендж\">\n\t\t\t<Div>\n\t\t\t\t<Group separator=\"hide\" header={<Header mode=\"secondary\">#СамыйГлупыйЧеллендж</Header>}>\n\t\t\t\t\t<CardGrid>\n\t\t\t\t\t\t<Card size=\"l\" mode=\"shadow\">\n\t\t\t\t\t\t\t<br /><center><Text weight=\"regular\">Это приложение - из серии приложений «Useless Senior» (Бесполезный Сеньор). В данном приложении вы можете узнать, включено ли устройство, с которого вы посещаете наше приложение.</Text><br /><br /><Text weight=\"medium\">Мы запускаем челлендж - опубликуйте на своей стене ВКонтакте предложенный ниже пост, чтобы сказать всем, что Ваше устройство включено, а также дайте возможность вашим друзьям проверить статус вашего устройства!</Text><br />\n\t\t\t\t<Button mode=\"commerce\" onClick={() => bridge.send(\"VKWebAppShowWallPostBox\", {\"message\": \"Благодаря приложению мне стало известно, что моё устройство включено!\\n\\nПопробуй и ты! Ссылка на проверку - https://vk.cc/av6cA2\\n\\n#СамыйГлупыйЧеллендж #МойДевайсВключен\", \"attachments\": \"photo-196019037_457239021\"})}>\n\t\t\t\t\tПрисоединиться к флешмобу\n\t\t\t\t</Button>\n\t\t\t\t\t</center><br />\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid><br />\n\t\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={() => bridge.send(\"VKWebAppJoinGroup\", {\"group_id\": 196019037})}>\n\t\t\t\t\tВступить в группу с бесполезными скриптами\n\t\t\t\t</Button>\n\t\t\t\t<br /><br />\n\t\t\t\t<center><Link href=\"https://vk.com/uselesssenior\">*разработчик - бесполезный сеньор*</Link></center>\n\t\t\t\t</Group>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}